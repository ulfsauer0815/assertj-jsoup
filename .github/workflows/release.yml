name: GitHub Release

on:
  push:
    tags:
      - 'v[0-9]*'

jobs:

  release:
    name: Create Release
#    if: github.event.base_ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set version
        run: echo "VERSION=$(echo "$GITHUB_REF" | sed 's|refs/tags/v||')" >> $GITHUB_ENV

      - name: Print version
        run: echo "$VERSION"

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Run build
        run: ./gradlew build -PcheckApi

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ env.VERSION }}
          draft: true
          prerelease: true

      - name: Attach jar to GitHub release
        id: upload-release-jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/assertj-jsoup-${{ env.VERSION }}.jar
          asset_name: assertj-jsoup-${{ env.VERSION }}.jar
          asset_content_type: application/java-archive

      - name: Attach sources jar to GitHub release
        id: upload-release-jar-sources
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/assertj-jsoup-${{ env.VERSION }}-sources.jar
          asset_name: assertj-jsoup-${{ env.VERSION }}-sources.jar
          asset_content_type: application/java-archive

      - name: Get GPG Key
        run: ./ci/load-gpg-key.sh
        env:
          GPG_SIGNING_KEY: "${{ secrets.GPG_SIGNING_KEY }}"

      - name: Publish to Sonatype / Maven Central
        run: ./ci/release.sh
        env:
          SONATYPE_USERNAME:  "${{ secrets.SONATYPE_USERNAME }}"
          SONATYPE_PASSWORD:  "${{ secrets.SONATYPE_PASSWORD }}"
          SIGNING_KEY_ID:     "${{ secrets.SIGNING_KEY_ID }}"
          SIGNING_PASSWORD:   "${{ secrets.SIGNING_PASSWORD }}"
